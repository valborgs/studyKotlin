학생 정보를 관리하는 프로그램

처음 시작하면 메뉴를 보여준다.
[ 메인 메뉴 ]
1. 학생 정보 입력
2. 학생 정보 검색
3. 학생 정보 전체 출력
4. 각 과목별 총점과 평균 확인
5. 종료
번호를 입력해주세요 :

메인 메뉴에서 1번을 선택하면...
현재 입력된 학생 수 : 10명
학생 이름 :
학생 나이 :
국어 점수 :
영어 점수 :
수학 점수 :

입력이 완료되면 메인 메뉴를 보여준다.

메인 메뉴에서 2번을 선택하면....
검색할 학생 이름 :
학생 이름 : 0000
학생 나이 : 0000
국어 점수 : 0000
영어 점수 : 0000
수학 점수 : 0000

메인 메뉴를 보여준다.

메인 메뉴에서 3번을 선택하면....
학생 이름 : 0000
학생 나이 : 0000
국어 점수 : 0000
영어 점수 : 0000
수학 점수 : 0000

위와 같은 형태로 모든 학생들의 정보를 보여주고 메인 메뉴를 보여준다

메인 메뉴에서 4번을 선택하면...
국어 총점 : 0000
영어 총점 : 0000
수학 총점 : 0000
국어 평균 : 0000
영어 평균 : 0000
수학 평균 : 0000

메인 메뉴를 보여준다.....

메인 메뉴에서 5번을 입력하면.....
프로그램이 종료되었습니다.를 보여주고 프로그램을 종료한다.

학생들의 정보는 모두 파일로 저장한다.

-------------------------------------------------------------------

개발 패턴
개발 프레임워크라고 부르기도 한다.
개발과 유지보수를 용이하게 하기 위해 각 파일마다 역할을 지정하고
그 역할에 맞는 기능을 구현하도록 하는 것

MVC 패턴
M (Model)
데이터를 저장하고 관리하는 요소
Model을 여러가지 역할로 나누기도 한다.
Model(VO, Value Object) - 순수 데이터만 저장하고 반환하는 역할만 수행한다.
DAO(Data Access Object) - Model이 가지고 있는 데이터를 외부(파일, 서버 등등)에 저장하고 외부에 저장되어 있는 데이터를
Model에 담아주는 등의 역할을 수행한다.
Repository - Model과 DAO의 중간에 위치한다. DAO가 읽어온 데이터를 Repository에 전달하고 Repository가 Model에 저장한다.
Model에 저장된 데이터를 Repository가 읽어들여 DAO로 보내면 DAO가 저장소에 저장한다.

V (View)
Model이 가지고 있는 데이터를 이용해 사용자에게 보여줄 화면을 구성한다.
V 를 더 확장하여 P 로 지정하는 MVP 패턴이 있고
V와 M을 더 확장하여 사용하는 MVVM 패턴도 있다.

C (Controller)
프로그램 전체의 흐름을 제어하는 역할을 수행한다.

-------------------------------------------------------------------

패키지와 클래스 설명

com.lion.project1.controller : 컨트롤러를 모아놓은 패키지
com.lion.project1.model : Model 들을 모아놓은 패키지
com.lion.project1.view : View 들을 모아놓은 패키지
com.lion.project1.dao : 데이터를 저장하고 읽어오는 클래스들을 모아놓은 패키지
com.lion.project1.activity : 각 상태에 대한 클래스들을 모아놓은 패키지
com.lion.project1.util : 기타 역할을 수행하는 클래스나 인터페이스를 모아놓은 패키지